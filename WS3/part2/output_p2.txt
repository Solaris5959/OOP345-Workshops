Script started on Fri 22 Sep 2023 01:03:42 PM EDT
==107680== Memcheck, a memory error detector
==107680== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==107680== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==107680== Command: ws
==107680== 
[38;5;9mBegin Testing the Program!
--------------------------[0m

Command Line arguments:
---------------------------------
  1: ws
---------------------------------

1. Book tester >>> ===========================================================
total books: 6
------------------------------------------------------------------------------
| 1.         Software Architecture for Busy Developers,7,174 | (24.857143)    |
| 2.     Low-Code Application Development with Appian,16,462 | (28.875000)    |
| 3.      Natural Language Processing with TensorFlow,11,514 | (46.727273)    |
| 4.                                  Learning DevOps,17,560 | (32.941176)    |
| 5.                            SQL for Data Analytics,9,540 | (60.000000)    |
| 6. Deciphering Object-Oriented Programming with C++,21,594 | (28.285714)    |
============================================================== <<< Book tester

2. Collection tester for int and 10 >>> ======================================
(smallest,largest) items: (5,35)
size/capacity: 7/10
Contents: [25,30,20,15,25,5,35]
========================================= <<< Collection tester for int and 10

3. Collection tester for double and 10 >>>====================================
(smallest,largest) items: (1.2,9.1)
size/capacity: 6/10
Contents: [7.8,9.1,3.4,1.2,2.3,6.7]
====================================== <<< Collection tester for double and 10

4. Collection tester for Book and 10 >>> =====================================
[After creating collection in empty state]
Book with smallest pages-to-chapters ratio (initial-default state): 
| Invalid book data |
Book with largest pages-to-chapters ratio (initial-deault-state): 
| Invalid book data |
size/capacity: 0/10

[After adding Six books to the collection]
Book with smallest pages-to-chapters ratio: 
         Software Architecture for Busy Developers,7,174 | (24.857143)    
Book with largest pages-to-chapters ratio: 
                            SQL for Data Analytics,9,540 | (60.000000)    
size/capacity: 6/10

Collection content:
| ---------------------------------------------------------------------------|
|          Software Architecture for Busy Developers,7,174 | (24.857143)     |
|      Low-Code Application Development with Appian,16,462 | (28.875000)     |
|       Natural Language Processing with TensorFlow,11,514 | (46.727273)     |
|                                   Learning DevOps,17,560 | (32.941176)     |
|                             SQL for Data Analytics,9,540 | (60.000000)     |
|  Deciphering Object-Oriented Programming with C++,21,594 | (28.285714)     |
| ---------------------------------------------------------------------------|
======================================== <<< Collection tester for Book and 10

5. OrderedCollection tester for int >>> ===========================================
(smallest,largest) items: (5,35)
size/capacity: 7/72
Contents: [5,15,20,25,25,30,35]
============================================= <<< OrderedCollection tester for int 

6. OrderedCollection tester for double >>> ========================================
(smallest,largest) items: (1.2,9.1)
size/capacity: 6/72
Contents: [1.2,2.3,3.4,6.7,7.8,9.1]
========================================== <<< OrderedCollection tester for double 

7. OrderedCollection tester for Book >>> ==========================================
[After creating collection in empty state]
Book with smallest pages-to-chapters ratio (initial-default state): 
| Invalid book data
Book with largest pages-to-chapters ratio (initial-deault-state): 
| Invalid book data
size/capacity: 0/72

[After adding six books to the collection]
Book with smallest pages-to-chapters ratio: 
         Software Architecture for Busy Developers,7,174 | (24.857143)    
Book with largest pages-to-chapters ratio: 
                            SQL for Data Analytics,9,540 | (60.000000)    
size/capacity: 6/72

List of OrderedCollection Books: 
| ---------------------------------------------------------------------------|
|          Software Architecture for Busy Developers,7,174 | (24.857143)     |
|  Deciphering Object-Oriented Programming with C++,21,594 | (28.285714)     |
|      Low-Code Application Development with Appian,16,462 | (28.875000)     |
|                                   Learning DevOps,17,560 | (32.941176)     |
|       Natural Language Processing with TensorFlow,11,514 | (46.727273)     |
|                             SQL for Data Analytics,9,540 | (60.000000)     |
| ---------------------------------------------------------------------------|
============================================ <<< OrderedCollection tester for Book 


[38;5;9m------------------------
End Testing the Program![0m
==107680== 
==107680== HEAP SUMMARY:
==107680==     in use at exit: 0 bytes in 0 blocks
==107680==   total heap usage: 76 allocs, 76 frees, 76,550 bytes allocated
==107680== 
==107680== All heap blocks were freed -- no leaks are possible
==107680== 
==107680== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

Script done on Fri 22 Sep 2023 01:03:43 PM EDT
